hashCode() method:
1. hashcode is not a memory address of java object we can change the hashcode of the object but we can not change the memory address
2. hashCode is a unque number generated by jvm for an object that is nothing but hashCode
3. this hashcode will be used by jvm in hashing related data structures for storing the element internally into buckets like structure. this hashCode makes searching operation faster so if our frequest operation is searching then we should go for hashing related data structure. where the hashCode is the location or index of the bucket in the hashCode so if we have search any element in the hashCode then immediately we will calculate the hashCode of the object and locate down the bucket and try to get it, unlike linear search where we need to loop through each and every element and see if this is equals to the current element or not untill we find the element.
4. hashCode search the element in O(1) time complexity.
5. if we do not override hashCode method in our class then Object class hashCode method will be called and it will use memory address of the object to generate the hashCode but doesnt mean hashCode represent the memory address of the hashCode
syntax of object class hashCode():
		public native int hashCode();

6. The overriding of hashCode of method should be done properly means for every object a seperate and unique hashCode should be generated then it will be consider as proper hashCode.